<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCRenderer.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCRenderer</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CCRenderer.h</DeclaredIn>
            
			
			<NodeRef refid="94"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCRenderer/invalidateState</TokenIdentifier>
			<Abstract type="html">Mark the renderer&apos;s cached GL state as invalid.</Abstract>
			<DeclaredIn>CCRenderer.h</DeclaredIn>
			
			<Declaration>- (void)invalidateState</Declaration>
			
			
			<Anchor>//api/name/invalidateState</Anchor>
            <NodeRef refid="94"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCRenderer/enqueueBlock:debugLabel:</TokenIdentifier>
			<Abstract type="html">Enqueue a block that performs GL commands.</Abstract>
			<DeclaredIn>CCRenderer.h</DeclaredIn>
			
			<Declaration>- (void)enqueueBlock:(void ( ^ ) ( ))block debugLabel:(NSString *)debugLabel</Declaration>
			
			
			<Anchor>//api/name/enqueueBlock:debugLabel:</Anchor>
            <NodeRef refid="94"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCRenderer/enqueueMethod:target:</TokenIdentifier>
			<Abstract type="html">Enqueue a method that performs GL commands.</Abstract>
			<DeclaredIn>CCRenderer.h</DeclaredIn>
			
			<Declaration>- (void)enqueueMethod:(SEL)selector target:(id)target</Declaration>
			
			
			<Anchor>//api/name/enqueueMethod:target:</Anchor>
            <NodeRef refid="94"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCRenderer/setGlobalShaderUniforms:</TokenIdentifier>
			<Abstract type="html">Current global shader uniform values.</Abstract>
			<DeclaredIn>CCRenderer_private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDictionary *globalShaderUniforms</Declaration>
			
			
			<Anchor>//api/name/globalShaderUniforms</Anchor>
            <NodeRef refid="94"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCRenderer/globalShaderUniforms</TokenIdentifier>
			<Abstract type="html">Current global shader uniform values.</Abstract>
			<DeclaredIn>CCRenderer_private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDictionary *globalShaderUniforms</Declaration>
			
			
			<Anchor>//api/name/globalShaderUniforms</Anchor>
            <NodeRef refid="94"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCRenderer/globalShaderUniforms</TokenIdentifier>
			<Abstract type="html">Current global shader uniform values.</Abstract>
			<DeclaredIn>CCRenderer_private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDictionary *globalShaderUniforms</Declaration>
			
			
			<Anchor>//api/name/globalShaderUniforms</Anchor>
            <NodeRef refid="94"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCRenderer/currentRenderer</TokenIdentifier>
			<Abstract type="html">Retrieve the current renderer for the current thread.</Abstract>
			<DeclaredIn>CCRenderer_private.h</DeclaredIn>
			
			<Declaration>+ (instancetype)currentRenderer</Declaration>
			
			
			<Anchor>//api/name/currentRenderer</Anchor>
            <NodeRef refid="94"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCRenderer/bindRenderer:</TokenIdentifier>
			<Abstract type="html">Set the current renderer for the current thread.</Abstract>
			<DeclaredIn>CCRenderer_private.h</DeclaredIn>
			
			<Declaration>+ (void)bindRenderer:(CCRenderer *)renderer</Declaration>
			
			
			<Anchor>//api/name/bindRenderer:</Anchor>
            <NodeRef refid="94"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCRenderer/flush</TokenIdentifier>
			<Abstract type="html">Render any currently queued commands.</Abstract>
			<DeclaredIn>CCRenderer_private.h</DeclaredIn>
			
			<Declaration>- (void)flush</Declaration>
			
			
			<Anchor>//api/name/flush</Anchor>
            <NodeRef refid="94"/>
		</Token>
		
        
	</File>
</Tokens>